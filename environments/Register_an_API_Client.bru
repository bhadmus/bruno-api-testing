meta {
  name: Register_an_API_Client
  type: http
  seq: 2
}

post {
  url: https://simple-books-api.glitch.me/api-clients/
  body: json
  auth: none
}

body:json {
  {
     "clientName": "Princess",
     "clientEmail": "{{email}}"
  }
}

script:pre-request {
  var email_server = "@yopmail.com"
  var email_prefix = "testflight"
  var date_time = new Date().getTime()
  var final_email = email_prefix+date_time+email_server
  
  bru.setVar("email", final_email)
}

tests {
  test("Response status code is 201", function () {
      expect(res.getStatus()).to.equal(201);
  });
  
  test("Response is an object with accessToken property", function () {
      expect(res.getBody()).to.be.an('object').that.has.property('accessToken');
  });
  
  test("Response has the required Content-Type header set to 'application/json'", function () {
  //     expect(pm.response.headers.get("Content-Type")).to.include("application/json");
  });
  
  
  test("Access token is a non-empty string", function () {
    const responseData = res.getBody();
    expect(responseData.accessToken).to.be.a('string').and.to.have.lengthOf.at.least(1, "Access token should not be empty");
  });
  
  
  test("Access token property should be a string", function () {
    const responseData = res.getBody();
    
    expect(responseData.accessToken).to.be.a('string');
  });
  
  var resp = res.getBody()
  var token = resp.accessToken
  
  bru.setVar('access_token', token)
}
